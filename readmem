 üß© User Management API ‚Äì FastAPI, Celery, Redis, Docker

 üìñ –û–ø–∏—Å–∞–Ω–∏–µ

–≠—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π REST API-—Å–µ—Ä–≤–∏—Å –Ω–∞ FastAPI –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏. –û–Ω –≤–∫–ª—é—á–∞–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, JWT-–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ –∫–æ–¥—É, —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (admin/user), –∞ —Ç–∞–∫–∂–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤.

–ü–æ–ª–Ω–æ—Å—Ç—å—é –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∏—Ä–æ–≤–∞–Ω —Å –ø–æ–º–æ—â—å—é Docker.

---

 üîß –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏

- FastAPI ‚Äî web-—Ñ—Ä–µ–π–º–≤–æ—Ä–∫
- SQLAlchemy ‚Äî ORM
- Pydantic / pydantic-settings ‚Äî –≤–∞–ª–∏–¥–∞—Ü–∏—è –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
- Alembic ‚Äî –º–∏–≥—Ä–∞—Ü–∏–∏
- Celery + Redis ‚Äî –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
- Docker / Docker Compose ‚Äî –∏–∑–æ–ª—è—Ü–∏—è —Å—Ä–µ–¥—ã

---

 üìÇ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞



project/
‚îú‚îÄ‚îÄ app/
‚îÇ   ‚îú‚îÄ‚îÄ main.py                   FastAPI-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
‚îÇ   ‚îú‚îÄ‚îÄ models.py                 SQLAlchemy –º–æ–¥–µ–ª–∏
‚îÇ   ‚îú‚îÄ‚îÄ schemas.py                Pydantic-—Å—Ö–µ–º—ã
‚îÇ   ‚îú‚îÄ‚îÄ auth.py                   –•—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–æ–ª–µ–π, JWT
‚îÇ   ‚îú‚îÄ‚îÄ db.py                     –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
‚îÇ   ‚îú‚îÄ‚îÄ config.py                 –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ pydantic-settings
‚îÇ   ‚îú‚îÄ‚îÄ dependencies.py           –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è —Ä–æ–ª–µ–π –∏ —Ç–æ–∫–µ–Ω–æ–≤
‚îÇ   ‚îú‚îÄ‚îÄ celery\_worker.py          –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Celery
‚îÇ   ‚îî‚îÄ‚îÄ tasks/
‚îÇ       ‚îî‚îÄ‚îÄ cleanup.py            –ó–∞–¥–∞—á–∞ –æ—á–∏—Å—Ç–∫–∏ –Ω–µ–≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
‚îú‚îÄ‚îÄ migrations/                   Alembic –º–∏–≥—Ä–∞—Ü–∏–∏
‚îú‚îÄ‚îÄ .env                          –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
‚îú‚îÄ‚îÄ Dockerfile                    Docker –æ–±—Ä–∞–∑
‚îú‚îÄ‚îÄ docker-compose.yml            –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã (API, Redis, Celery)
‚îú‚îÄ‚îÄ requirements.txt              –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
‚îî‚îÄ‚îÄ README.md                     –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è



---

 üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç (—á–µ—Ä–µ–∑ Docker)

 1. –°–∫–ª–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –∏ –ø–µ—Ä–µ–π—Ç–∏ –≤ –ø—Ä–æ–µ–∫—Ç

bash
git clone https://github.com/your-username/project.git
cd project




 2. –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–µ–∫—Ç

bash
docker-compose up --build


–ü–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞:

 API –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞: http://localhost:8000
 Swagger UI: http://localhost:8000/docs



 üìÖ –ü–ª–∞–Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞ (Celery)

–°–µ—Ä–≤–∏—Å Celery Beat –∑–∞–ø—É—Å–∫–∞–µ—Ç –∑–∞–¥–∞—á—É delete_unverified_users –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 00:00, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ:

 –Ω–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω—ã,
 –∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –±–æ–ª–µ–µ 2 –¥–Ω–µ–π –Ω–∞–∑–∞–¥.

(–î–ª—è —Ç–µ—Å—Ç–æ–≤ –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª –Ω–∞ 30 —Å–µ–∫—É–Ω–¥)

 üß± Alembic: –º–∏–≥—Ä–∞—Ü–∏–∏

1. –°–æ–∑–¥–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏:

bash
alembic revision --autogenerate -m "initial"


2. –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏:

bash
alembic upgrade head


---

 ‚öôÔ∏è –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã (–ª–æ–∫–∞–ª—å–Ω–æ)

bash
 –ó–∞–ø—É—Å—Ç–∏—Ç—å FastAPI –ª–æ–∫–∞–ª—å–Ω–æ
uvicorn main:app --reload

 –ó–∞–ø—É—Å—Ç–∏—Ç—å Celery worker
celery -A celery_worker.celery_app worker --loglevel=info

 –ó–∞–ø—É—Å—Ç–∏—Ç—å Celery beat
celery -A celery_worker.celery_app beat --loglevel=info


---

 ‚úÖ –£–ª—É—á—à–µ–Ω–∏—è (TODO)

 –û—Ç–ø—Ä–∞–≤–∫–∞ email —Å –∫–æ–¥–æ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
 –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–ø—ã—Ç–æ–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
 –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π SQLAlchemy (async ORM)
 –ü–æ–∫—Ä—ã—Ç–∏–µ unit-—Ç–µ—Å—Ç–∞–º–∏ —Å Pytest

